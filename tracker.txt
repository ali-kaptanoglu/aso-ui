import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'ScanMe QR Attendance Tracker',
      theme: ThemeData(
        primarySwatch: Colors.blue,
        visualDensity: VisualDensity.adaptivePlatformDensity,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Row(
        children: [
          SideBar(),
          Expanded(
            child: MainContent(),
          ),
        ],
      ),
    );
  }
}

class SideBar extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Container(
      width: 200,
      color: Colors.grey[200],
      child: Column(
        children: [
          AppListItem(
            icon: Icons.qr_code,
            title: 'ScanMe QR Attendance Tracker',
            subtitle: 'iPhone',
            color: Colors.red,
          ),
          AppListItem(
            icon: Icons.link,
            title: 'Store Redirect ASO Explorer',
            subtitle: 'iPhone',
            color: Colors.blue,
          ),
          AppListItem(
            icon: Icons.timer,
            title: 'Counter: UTube Subscribers',
            subtitle: 'iPhone',
            color: Colors.green,
          ),
          Spacer(),
          ElevatedButton(
            onPressed: () {},
            child: Text('+ Add App'),
          ),
        ],
      ),
    );
  }
}

class AppListItem extends StatelessWidget {
  final IconData icon;
  final String title;
  final String subtitle;
  final Color color;

  AppListItem({
    required this.icon,
    required this.title,
    required this.subtitle,
    required this.color,
  });

  @override
  Widget build(BuildContext context) {
    return ListTile(
      leading: Icon(icon, color: color),
      title: Text(title),
      subtitle: Text(subtitle),
    );
  }
}

class MainContent extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Column(
      children: [
        AppBar(
          title: Text('ScanMe QR Attendance Tracker'),
          actions: [
            ElevatedButton(
              onPressed: () {},
              child: Text('+ Add Keywords'),
            ),
            IconButton(icon: Icon(Icons.flag), onPressed: () {}),
            IconButton(icon: Icon(Icons.lightbulb_outline), onPressed: () {}),
            IconButton(icon: Icon(Icons.tag), onPressed: () {}),
          ],
        ),
        Expanded(
          child: SingleChildScrollView(
            scrollDirection: Axis.horizontal,
            child: DataTable(
              columns: [
                DataColumn(label: Text('Keyword')),
                DataColumn(label: Text('Notes')),
                DataColumn(label: Text('Last update')),
                DataColumn(label: Text('Popularity')),
                DataColumn(label: Text('Difficulty')),
                DataColumn(label: Text('Position')),
                DataColumn(label: Text('Ranking')),
              ],
              rows: [
                buildDataRow('qr', 41, 85),
                buildDataRow('event', 35, 100),
                buildDataRow('attendance tracker', 25, 45, position: '24'),
                buildDataRow('guest', 19, 48),
                buildDataRow('tracking presence', 5, 5, position: '17'),
                buildDataRow('check in', 38, 61),
                // ... Diğer satırları da benzer şekilde ekleyin
              ],
            ),
          ),
        ),
      ],
    );
  }

  DataRow buildDataRow(String keyword, int popularity, int difficulty, {String position = '-'}) {
    return DataRow(
      cells: [
        DataCell(Text(keyword)),
        DataCell(Icon(Icons.edit)),
        DataCell(Text('4 minutes ago')),
        DataCell(LinearProgressIndicator(value: popularity / 100)),
        DataCell(LinearProgressIndicator(value: difficulty / 100, valueColor: AlwaysStoppedAnimation<Color>(Colors.red))),
        DataCell(Text(position)),
        DataCell(Row(
          children: List.generate(5, (index) => Icon(Icons.star_border, size: 18)),
        )),
      ],
    );
  }
}